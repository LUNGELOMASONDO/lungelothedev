{"version":3,"sources":["profile2.jpg","undraw_hello_aeia.svg","toolbox.png","Nav.js","Content.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","id","src","profileImg","alt","href","data-tooltip","this","props","cell","className","React","Component","Content","state","page","contactme","bind","handleHomePage","handleWorkPage","swal","title","text","content","buttons","then","value","length","window","location","setState","style","paddingTop","onClick","color","WorkerSVG","Toolbox","Footer","App","projects","errorLoad","icon","fetch","response","data","contacts","JSON","parse","cellphone","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c1adc808.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile2.32cd677f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_hello_aeia.7f20e5ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/toolbox.e5f2dcd9.png\";","import React from 'react';\r\nimport profileImg from './profile2.jpg';\r\nimport './App.css';\r\n\r\nclass Nav extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <img id=\"profile-img\" src={profileImg} alt=\"Lungelo Masondo\" />\r\n                <h3><span id=\"my-name\">Lungelo</span><span>: The Developer</span></h3>\r\n                <a href=\"tel:+27744928558\" data-tooltip={this.props.cell} className=\"material-icons wa-icon\">\r\n                    local_phone\r\n                </a>\r\n            </nav>\t\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport swal from 'sweetalert';\r\nimport WorkerSVG from './undraw_hello_aeia.svg';\r\nimport Toolbox from './toolbox.png';\r\nimport './App.css';\r\n\r\nclass Content extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpage: 0\r\n\t\t};\r\n\t\tthis.contactme = this.contactme.bind(this);\r\n\t\tthis.handleHomePage = this.handleHomePage.bind(this);\r\n\t\tthis.handleWorkPage = this.handleWorkPage.bind(this);\r\n\t}\r\n\tcontactme() {\r\n\t\tswal({\r\n\t\t\ttitle: 'Send me a whatsapp:',\r\n\t\t\ttext: \"Mind if I got your name?\", \r\n\t\t\tcontent: \"input\",\r\n\t\t\tbuttons: \"Send\"\r\n\t\t})\r\n\t\t.then((value) => {\r\n\t\t\tif(value !== null){\r\n\t\t\t\tif(value.length > 1){\r\n\t\t\t\t\twindow.location.href = \"https://wa.me/+27744928558?text=Hey Lungelo my name is \" + value + \", I'm looking for a developer.\";\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\twindow.location.href = \"https://wa.me/+27744928558?text=Hey Lungelo, I'm looking for a developer.\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\thandleWorkPage() {\r\n\t\tthis.setState({\r\n\t\t\tpage: 1\r\n\t\t});\r\n\t}\r\n\thandleHomePage() {\r\n\t\tthis.setState({\r\n\t\t\tpage: 0\r\n\t\t});\r\n\t}\r\n    render() {\r\n\t\tif(this.state.page === 1){\r\n\t\t\treturn (\r\n\t\t\t\t<div id=\"content-wrap\" style={{paddingTop: \"10px\"}}> \r\n\t\t\t\t\t<button id=\"backhome-btn\" onClick={this.handleHomePage} style={{color: \"grey\"}}>\r\n\t\t\t\t\t\t&#8592;\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<h2>Nothing to see currently. <br/> Stay tuned for cool upcoming projects</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn (\r\n\t\t\t\t<div id=\"content-wrap\"> \r\n\t\t\t\t\t<div id=\"hello-world\">\r\n\t\t\t\t\t\t<img src={WorkerSVG} alt=\"developer avi\"/>\r\n\t\t\t\t\t\t<div id=\"intro-sect\">\r\n\t\t\t\t\t\t\t<p> Hey, I'm Lungelo the developer your go to guy for most things software development related. </p>\r\n\t\t\t\t\t\t\t<div id=\"my-buttons\">\r\n\t\t\t\t\t\t\t\t<button id=\"my-work-btn\" onClick={this.handleWorkPage}> My portfolio </button>\r\n\t\t\t\t\t\t\t\t<button id=\"get-in-touch-btn\" onClick={this.contactme}> Get in touch </button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"skills-label\">\r\n\t\t\t\t\t\t<img src={Toolbox} alt=\"Dev Skills\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"about-me\">\r\n\t\t\t\t\t\t<div className=\"wordchange\"> </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport './App.css';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer id=\"footer\">\r\n\t\t\t\t<a href={\"tel:\" + this.props.cell} className=\"material-icons wa-icon\">\r\n\t\t\t\t\tlocal_phone\r\n\t\t\t\t</a>\r\n\t\t\t\t<hr />\r\n\t\t\t\t&#169; Lungelo: The Developer\r\n\t\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport swal from 'sweetalert';\r\nimport './App.css';\r\nimport Nav from './Nav';\r\nimport Content from './Content';\r\nimport Footer from './Footer';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      cell: null,\r\n      projects: null\r\n    }\r\n\t\tthis.errorLoad = this.errorLoad.bind(this);\r\n  }\r\n  errorLoad(){\r\n    swal({\r\n      icon: 'warning',\r\n      text: 'Problem loading page'\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    fetch('https://cors-anywhere.herokuapp.com/' + 'http://lungelo.mysite.web.za/contacts.php')\r\n    .then(response => response.text())\r\n    .then(data => {\r\n      var contacts =  JSON.parse(data);\r\n      this.setState({\r\n        cell: contacts.cellphone\r\n      })\r\n      //console.log(contacts.cellphone);\r\n    });\r\n    fetch('https://cors-anywhere.herokuapp.com/' + 'http://dimonatefoods.co.za/siteinfo')\r\n    .then(response => response.text())\r\n    .then(data => {\r\n      this.setState({\r\n        projects: JSON.parse(data)\r\n      })\r\n      //console.log(contacts.cellphone);\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav cell={\"074 492 8558\"} />\r\n        <div id=\"page-container\">\t\t    \r\n            <Content cell={\"074 492 8558\"} projects={this.state.projects} />\r\n            <Footer cell={\"074 492 8558\"} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}